import { type Topic } from "@prisma/client";
import { type NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";
import { Header } from "~/components/header";
import { api } from "~/utils/api";

const Home: NextPage = () => {


  return (
    <>
      <Head>
        <title>Notetaker</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        <Content />
      </main>
    </>
  );
};

export default Home;

export const Content = () => {

  const [selectedTopic, setSelectedTopic] = useState<Topic | null>(null)

  const { data: sessionData } = useSession()

  const { data: topics, refetch: refetchTopics } = api.topic.getAll.useQuery(
    undefined,
    {
      enabled: sessionData?.user !== undefined,
    }
  );

  useEffect(() => {
    if (topics !== undefined) {
      setSelectedTopic(selectedTopic ?? topics[0] ?? null)
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [topics])
  const createTopic = api.topic.create.useMutation({
    onSuccess: () => {
      void refetchTopics()
    }
  })

  return (
    <div className="px-5 pt-5 grid grid-cols-4 gap-2">
      <div className="px-2">
        <ul className="menu rounded-box w-full bg-base-100 p-2">
          {topics?.map((topic) => (
            <li key={topic.id}>
              <Link
                href={'#'}
                onClick={(e) => {
                  e.preventDefault()
                  setSelectedTopic(topic)
                }}
              >
                {topic.title}
              </Link>
            </li>
          ))}
        </ul>
        <div className="divider"></div>
        <input
          type="text"
          placeholder="New topic"
          className="input-bordered input input-sm w-full"
          onKeyDown={(e) => {
            if (e.key === "Enter") {
              createTopic.mutate({
                title: e.currentTarget.value
              })
              e.currentTarget.value = ""
            }
          }}
        />
      </div>
      <div className="col-span-3">
        <p>{selectedTopic?.title}</p>
      </div>
    </div>
  )
}